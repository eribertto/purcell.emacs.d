#+TITLE: Literate Programming Intro
#+AUTHOR: Eriberto Mendez
#+DATE: <2023-09-23 Sat>

* Begin Literate Programming code followon

* CANCELLED install latex and friends in this machine
CLOSED: [2023-09-28 Thu 05:06]
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2023-09-28 Thu 05:06] \\
  this is dupe
:END:

* FYI dont forget to browse the cloned emacs dir under MyGitrepos to learn emacs lisp among other things
* DONE done install latex and friends in this eos machine, browse the aur with yay [[https://wiki.archlinux.org/title/tex_live][texlive arch linux]]
CLOSED: [2023-09-23 Sat 12:18]
closed: [2023-09-23 sat 12:15]
:logbook:
- State "DONE"       from              [2023-09-23 Sat 12:18]
- state "done"       from "todo"       [2023-09-23 sat 12:15]
:end:

* fyi installed packages are listed in this [[file:latex.install.txt][file]]
* TIL to open link at point in org mode do C-c C-o

#+BEGIN_SRC emacs-lisp
(directory-files ".")
#+end_src

#+RESULTS:
| . | .. | journal.org | latex.install.txt | learning.emacs.help.system.org | modus-themes.org | my.first.literate.progr.tute.org | my.tracking.expense.org | tasks.org |

* TODO how to install org templates or yasnippets to use in literate programming?
* FYI shell alias doesnt work in a source code block of shell, at least to my machine here.

#+begin_src sh
  (lsd --tree --depth=1 ~/.emacs.d/lisp)
#+end_src

#+RESULTS:
| lisp |                       |
| ├──  | init-benchmarking.el  |
| ├──  | init-clojure-cider.el |
| ├──  | init-clojure.el       |
| ├──  | init-common-lisp.el   |
| ├──  | init-compile.el       |
| ├──  | init-corfu.el         |
| ├──  | init-crontab.el       |
| ├──  | init-css.el           |
| ├──  | init-csv.el           |
| ├──  | init-darcs.el         |
| ├──  | init-dash.el          |
| ├──  | init-dired.el         |
| ├──  | init-direnv.el        |
| ├──  | init-docker.el        |
| ├──  | init-editing-utils.el |
| ├──  | init-eglot.el         |
| ├──  | init-elm.el           |
| ├──  | init-elpa.el          |
| ├──  | init-erlang.el        |
| ├──  | init-exec-path.el     |
| ├──  | init-flymake.el       |
| ├──  | init-folding.el       |
| ├──  | init-frame-hooks.el   |
| ├──  | init-git.el           |
| ├──  | init-github.el        |
| ├──  | init-grep.el          |
| ├──  | init-gui-frames.el    |
| ├──  | init-haml.el          |
| ├──  | init-haskell.el       |
| ├──  | init-hippie-expand.el |
| ├──  | init-html.el          |
| ├──  | init-http.el          |
| ├──  | init-ibuffer.el       |
| ├──  | init-isearch.el       |
| ├──  | init-j.el             |
| ├──  | init-javascript.el    |
| ├──  | init-ledger.el        |
| ├──  | init-lisp.el          |
| ├──  | init-local.el         |
| ├──  | init-locales.el       |
| ├──  | init-lua.el           |
| ├──  | init-markdown.el      |
| ├──  | init-minibuffer.el    |
| ├──  | init-misc.el          |
| ├──  | init-mmm.el           |
| ├──  | init-nim.el           |
| ├──  | init-nix.el           |
| ├──  | init-nxml.el          |
| ├──  | init-ocaml.el         |
| ├──  | init-org.el           |
| ├──  | init-osx-keys.el      |
| ├──  | init-paredit.el       |
| ├──  | init-php.el           |
| ├──  | init-projectile.el    |
| ├──  | init-purescript.el    |
| ├──  | init-python.el        |
| ├──  | init-rails.el         |
| ├──  | init-recentf.el       |
| ├──  | init-ruby.el          |
| ├──  | init-rust.el          |
| ├──  | init-sessions.el      |
| ├──  | init-site-lisp.el     |
| ├──  | init-slime.el         |
| ├──  | init-spelling.el      |
| ├──  | init-sql.el           |
| ├──  | init-terraform.el     |
| ├──  | init-textile.el       |
| ├──  | init-themes.el        |
| ├──  | init-toml.el          |
| ├──  | init-treesitter.el    |
| ├──  | init-uniquify.el      |
| ├──  | init-utils.el         |
| ├──  | init-vc.el            |
| ├──  | init-whitespace.el    |
| ├──  | init-windows.el       |
| ├──  | init-xterm.el         |
| └──  | init-yaml.el          |

* COMMENT I dont have the function org-babel-do-load languages, so check the init-org.el file above to see the config. Update: the mentioned file is edited and added clojure, perl into the mix

* COMMENT also to move between source blocks do C-c M-f/M-b key chords
:LOGBOOK:
- Note taken on [2023-09-23 Sat 14:00] \\
  source code block navigation
:END:

* COMMENT Block settings aka block parameters or header params and in the case below it is :dir
#+begin_src sh :dir /etc
  ls | grep au
#+end_src

#+RESULTS:
| audit             |
| default           |
| libaudit.conf     |
| vdpau_wrapper.cfg |

* Setting Parameter Locations

** Inline with header block or above header block

** Defaults for blocks in a section

** Defaults for blocks in the entire document

** Defaults for every document

* Example using inline header
#+header: :dir /etc
#+begin_src sh :var USER="eriberttom"
grep $USER passwd
#+end_src

#+RESULTS:
: eriberttom:x:1000:1000:eribertto mendz:/home/eriberttom:/bin/bash

* COMMENT what is org property drawer? It says parameters that should be the same for all source blocks in a section can be placed in a property drawer.

** create a header section in your org file

** type C-c C-x p

** for Property enter: dir

** for Value enter: /etc
:PROPERTIES:
:dir:      /etc
:header-args:sh: :dir /etc
:END:
#+header:
#+begin_src sh
ls -d $(pwd)
#+end_src

#+RESULTS:
: /etc

* Thu 28 Sep 2023 05:10:32 AM +03
** Begin literate session
** todo install ruby in this eos nucmachine to follow along the code examples
** also save the date code snippets in the scratch
